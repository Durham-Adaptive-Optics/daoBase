name: Build and Test Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
      fail-fast: false  # Continue with other builds even if one fails
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install system dependencies (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y libtool pkg-config build-essential autoconf automake python3 python-is-python3 \
          libssl-dev libncurses5-dev libncursesw5-dev redis libgtest-dev libgsl-dev libzmq3-dev \
          protobuf-compiler numactl libnuma-dev
        
    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install libtool pkg-config autoconf automake openssl ncurses redis gsl zeromq protobuf
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install posix_ipc zmq protobuf==3.20.0 astropy python-statemachine statemachine redis sphinx screeninfo
        
    - name: Download waf
      run: |
        curl -o waf https://waf.io/waf-2.0.24
        chmod +x waf
        
    - name: Configure and build with waf
      run: |
        python waf configure
        python waf build
    
    - name: Run tests
      run: |
        python waf test
        
    # - name: Upload build artifacts
    #   uses: actions/upload-artifact@v4.6.2
    #   with:
    #     name: build-output-${{ matrix.os }}
    #     path: build/
    #     if-no-files-found: warn
    #     retention-days: 14
    #     compression-level: 6
    #     overwrite: true
    #     include-hidden-files: false
