#! /usr/bin/env python
import platform
# additional_flags
add_ld_flags = ['']
add_c_flags  = ['']
add_cxx_flags= ['']
#! /usr/bin/env python


if platform.system() == "Darwin":
    add_ld_flags += ['-L/opt/homebrew/lib']
    add_cxx_flags += ['-std=c++17']
    add_c_flags += ['-O3', '-ffast-math', '-pthread']

elif platform.system() == "Windows":
	add_cxx_flags += ['-lrt']
	add_c_flags +=  ['']
else:
	add_ld_flags += ['-lnuma']
	add_cxx_flags += ['-march=native']
	add_c_flags +=  ['-lrt', '-Ofast', '-pthread']


if bld.options.debug_flag:
    add_c_flags+=['-g']
    add_cxx_flags+=['-g']
    
if bld.options.sanitizer_flag:
    add_c_flags+=['-g', '-fsanitize=address']
    add_cxx_flags+=['-g']
    add_ld_flags+=['-fsanitize=address']
    
if platform.system() != "Windows":
	bld.shlib(
		source 		= 'cpp/daoNuma.cpp',
		includes 	= '../include',
		ldflags		= [''] + add_ld_flags,
		cxxflags 	= ['-Wall', '-Wextra'] + add_cxx_flags,
		target 		= 'daoNuma',
		name   		= 'daoNuma',
		features	= 'pkg_build',
		vnum   		= '0.0.1')

	bld.shlib(
		source 		= 'cpp/daoComponent.cpp',
		includes 	= ['../include',  f'{bld.env.PREFIX}/include'],
		ldflags		= [''] + add_ld_flags,
		cxxflags 	= ['-Wall', '-Wextra'] + add_cxx_flags,
		target 		= 'daoComponent',
		name   		= 'daoComponent',
		features	= 'pkg_build',
		vnum   		= '0.0.1')
	
	
	bld.shlib(
		source = 'c/dao.c',
		includes = '../include',
		cflags = ['-Wall', '-Wextra', '-pipe', '-fdiagnostics-color=auto', '-fstack-protector'] + add_c_flags,
		ldflags = [''] + add_ld_flags,
		target = 'dao',
		name   = 'dao',
		features	= 'pkg_build',
		vnum   = '0.0.1')
else:
	bld.shlib(
		source = 'c/dao.c',
		includes = '../include',
		#cflags = ['-Ofast', '-Wall', '-Wextra', '-Werror', '-pipe'],
		#cflags = ['-Ofast', '-Wall', '-Wextra', '-pipe', '-fdiagnostics-color=auto', '-fstack-protector'] + add_c_flags,
		cflags = ['/W3', '/D_CRT_SECURE_NO_WARNINGS'],
		ldflags = ['advapi32.lib'] + add_ld_flags,
		target = 'dao',
		name   = 'dao',
		features	= 'pkg_build',
		vnum   = '0.0.1')
