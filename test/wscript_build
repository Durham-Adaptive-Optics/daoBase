#! /usr/bin/env python
import platform,os
# additional_flags
add_ld_flags = ['']
add_c_flags  = ['']
add_cxx_flags= ['']
#! /usr/bin/env python


if platform.system() == "Darwin":
    add_ld_flags += ['-L/opt/homebrew/lib']
    add_cxx_flags += ['-std=c++17']
    add_c_flags += ['']
else:
	add_ld_flags += ['-lnuma']
	add_cxx_flags += ['-lrt']
	add_c_flags +=  ['-lrt']


if bld.options.debug_flag:
    add_c_flags+=['-g']
    add_cxx_flags+=['-g']
    
if bld.options.sanitizer_flag:
    add_c_flags+=['-g', '-fsanitize=address']
    add_cxx_flags+=['-g']
    add_ld_flags+=['-fsanitize=address']
    



# TESTING BUILDS   
bld.program(
	features='test',
	target = 'test_numa',
	source = [ 'test_numa.cpp' ],
	includes = ['../include/', f'{bld.env.PREFIX}/include'],
	lib = [ 'gtest', 'gtest_main'],
	ldflags=[ f'-L{bld.env.PREFIX}/lib64'] + add_ld_flags,
	cxxflags = [''] + add_cxx_flags,
	use=['daoNuma']
	)

bld.program(
	features='test',
	target = 'test_queue',
	source = [ 'test_queue.cpp' ],
	includes = ['../include/', f'{bld.env.PREFIX}/include'],
	lib = [ 'gtest', 'gtest_main'],
	ldflags=[  f'-L{bld.env.PREFIX}/lib64'] + add_ld_flags,
	cxxflags = [''] + add_cxx_flags,
	)

bld.program(
	features='test',
	target = 'test_log',
	source = [ 'test_log.cpp' ],
	includes = ['../include/', '../build/', f'{bld.env.PREFIX}/include',],
	linkflags = [ '-L../build/proto'],
	lib = [ 'gtest', 'gtest_main', 'pthread'],
	ldflags=[ f'-L{bld.env.PREFIX}/lib64'] + add_ld_flags,
	cxxflags = [''] + add_cxx_flags,
	use=['PROTOBUF', 'ZMQ', 'daoProto']
	)

bld.program(
    features='test',
    target = 'test_comp.cpp',
    source = [ 'test_component.cpp' ],
    includes = ['../include/', f"{bld.env.PREFIX}/include", '../build/'],
    lib = [ 'gtest', 'gtest_main'],
	cxxflags = [''] + add_cxx_flags,
    ldflags=['-pthread', f'-L{bld.env.PREFIX}/lib64'] + add_ld_flags,
    use=['ZMQ', 'PROTOBUF','daoNuma', 'daoProto']
    )

bld.program(
    features='test',
    target = 'test_threads',
    source = [ 'test_threads.cpp' ],
    includes = ['../include/', f"{bld.env.PREFIX}/include", '../build/'],
    lib = [ 'gtest', 'gtest_main'],
	ldflags=['-pthread', f'-L{bld.env.PREFIX}/lib64'] + add_ld_flags,
    cxxflags = [''] + add_cxx_flags,
    use=['ZMQ', 'PROTOBUF', 'daoNuma', 'daoProto']
    )

bld.program(
    features='test',
    target = 'test_thread_block',
    source = [ 'test_thread_block.cpp' ],
    includes = ['../include/', f"{bld.env.PREFIX}/include", '../build/'],
    lib = [ 'gtest', 'gtest_main'],
	ldflags=['-pthread', f'-L{bld.env.PREFIX}/lib64'] + add_ld_flags,
    cxxflags = [''] + add_cxx_flags,
    use=['ZMQ', 'PROTOBUF', 'daoNuma', 'daoProto']
    )

bld.program(
	features='test',
	target = 'test_shm',
	source = [ 'test_shm.cpp' ],
    includes = ['../include/', f"{bld.env.PREFIX}/include", '../build/'],
    lib = [ 'gtest', 'gtest_main'],
	ldflags=['-pthread', f'-L{bld.env.PREFIX}/lib64'] + add_ld_flags,
    cxxflags = [''] + add_cxx_flags,
	use=['dao', 'daoNuma', 'daoProto', 'ZMQ', 'PROTOBUF']
	)

bld.program(
	features ='test',
	target   = 'test_update_thread',
	source   = [ 'test_update_thread.cpp' ],
    includes = ['../include/', f"{bld.env.PREFIX}/include", '../build/'],
    lib = [ 'gtest', 'gtest_main'],
	ldflags=['-pthread', f'-L{bld.env.PREFIX}/lib64'] + add_ld_flags,
    cxxflags = [''] + add_cxx_flags,
	use=['dao', 'daoNuma', 'daoProto', 'ZMQ', 'PROTOBUF']
	)

### test ciomnponents
# daoLogTest = bld.program(
# 	source = 'daoLogTest.c',
# 	target = 'daoLogTest',
# 	includes = ['../include/', f"{bld.env.PREFIX}/include", '../build/'],
# 	linkflags = [ '-L'+os.getenv('DAOROOT')+'/lib/','-L'+os.getenv('DAOROOT')+'/lib64/'],
# 	ldflags = ['-ldao', '-lpthread', '-lrt', '-lm', '-lncurses'],
# 	use= 'dao',
# 	cflags = ['-Ofast', '-Wall', '-Wextra', '-Werror', '-pipe', '-fdiagnostics-color=auto'],
# 	)
